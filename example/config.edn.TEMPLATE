;; vim: ft=clojure
{:prod {:com.example/enable-web true
        :com.example/enable-worker true
        :biff.xtdb/dir "storage/xtdb"
        :biff.xtdb/topology :standalone
        ;; Standalone topology in production isn't recommended for anything
        ;; serious. You can uncomment the following to use managed postgres
        ;; instead.
        ;; :biff.xtdb/topology :jdbc
        ;; :biff.xtdb.jdbc/jdbcUrl "postgresql://user:password@host:port/dbname?sslmode=require"
        :biff/base-url "https://example.com"
        ;; Mailersend is used to send email sign-in links. Create an account at
        ;; https://mailersend.com/.
        :mailersend/api-key nil
        :mailersend/defaults {;; Your from address must use the domain you've verified in MailerSend.
                              [:from :email] "hello@mail.example.com"
                              [:from :name] "My Application"
                              ;; Change this to your personal address/wherever you'd like replies to go.
                              [:reply_to :email] "hello@example.com"
                              [:reply_to :name] "My Application"}
        ;; Recaptcha is used to protect your sign-in page. Go to
        ;; https://www.google.com/recaptcha/about/ and add a site. Select v2
        ;; invisible. Add localhost to your list of allowed domains.
        :recaptcha/site-key nil
        :recaptcha/secret-key nil
        :biff.middleware/cookie-secret nil
        :biff/jwt-secret nil}
 :dev {:merge [:prod]
       ;; See com.example.feat.worker
       ;; :com.example/enable-worker false
       :com.example/enable-beholder true
       :biff/host "0.0.0.0"
       :biff/port 8080
       :biff/base-url "http://localhost:8080"
       :biff.xtdb/topology :standalone
       :biff.middleware/secure false}
 :tasks {;; Set this if the auto-detection doesn't work
         ;; Possible values: macos-x64, macos-arm64, linux-x64, linux-arm64
         :biff.tasks/tailwind-build nil
         :biff.tasks/main-ns com.example
         :biff.tasks/soft-deploy-fn com.example/on-save
         :biff.tasks/deploy-from "master"
         :biff.tasks/deploy-to "prod"
         :biff.tasks/server "example.com"}}
